version: "3.9"

services:
  # product_inventory:
  #   container_name: product_inventory
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: inventory:0.1.0
  #   volumes:
  #     - .:/app
  #   working_dir: /app
  #   command: >
  #       bash -cx "cd db && \
  #       alembic upgrade head && \
  #       cd .. && \
  #       gunicorn \
  #       --workers=3 \
  #       --worker-class=uvicorn.workers.UvicornWorker \
  #       --timeout=174000 \
  #       --bind=0.0.0.0:3060 \
  #       'product_inventory.rest.app:start_application()'"
  #   ports:
  #     - 3060:3060
  #   networks:
  #     - inventory-network
  #   depends_on:
  #     - etl_products
  #     - db_inventory
  #   healthcheck:
  #     test: curl --fail http://localhost:3060/v1/docs || exit 1
  #     interval: 10s
  #     timeout: 10s
  #     start_period: 10s
  #     retries: 3

  etl_products:
    container_name: etl_products
    build:
      context: .
      dockerfile: Dockerfile.etl
    image: etl:0.1.0
    command: python3 /app/worker/etl.py
    environment:
      DB_URI: postgresql://postgres:secret@db_inventory:5432/inventory
    networks:
      - inventory-network
    depends_on:
      - db_inventory
  
  db_inventory:
    container_name: db_inventory
    image: postgres:12
    restart: always
    environment:
      - POSTGRES_DB=inventory
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=postgres
    ports:
      - 15432:5432
    volumes:
      - vdb_inventory:/var/lib/postgresql/data/
      - ./db/create.sql:/docker-entrypoint-initdb.d/create.sql
    networks:
      - inventory-network
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "inventory",
          "-U",
          "postgres"
        ]
      timeout: 20s
      interval: 2s
      retries: 10

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=inventory@email.com
      - PGADMIN_DEFAULT_PASSWORD=secret
    ports:
      - 8032:80
    depends_on:
      - db_inventory
    networks:
      - inventory-network

networks:
  inventory-network:
    name: inventory-network
    driver: bridge

volumes:
    vdb_inventory:
